name: Create Release

on:
  pull_request:
    branches: [ main, master ]
    types: [ closed ]

jobs:
  one:
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJSON(job) }}
        run: echo "$JOB_CONTEXT"
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJSON(steps) }}
        run: echo "$STEPS_CONTEXT"
      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJSON(runner) }}
        run: echo "$RUNNER_CONTEXT"
      - name: Dump strategy context
        env:
          STRATEGY_CONTEXT: ${{ toJSON(strategy) }}
        run: echo "$STRATEGY_CONTEXT"
      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJSON(matrix) }}
        run: echo "$MATRIX_CONTEXT"
  release:
    name: 'Create Release'
    runs-on: ubuntu-latest
    if: startsWith(github.event.pull_request.title, 'chore(release)') && github.event.pull_request.merged == true
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2
      - name: Setup Node.js
        uses: actions/setup-node@v1
        with:
          node-version: 13
      - name: Install dependencies
        run: npm ci
      - name: Get version from package.json before release step
        id: initversion
        run: echo "::set-output name=version::$(npm run get-version --silent)"
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          name: 'v${{ steps.extractver.outputs.version }}'
          body_path: CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ secrets.DRM_GIT_HUB_TOKEN }}
  publish:
    name: Publish to Github Package Registry
    needs: [ release ]
    if: github.event.base_ref == 'refs/heads/master'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Setup NodeJS
        uses: actions/setup-node@v1
        with:
          always-auth: true
          node-version: '12.x'
          registry-url: 'https://npm.pkg.github.com'
      - run: npm config set python python2.7
        env:
          NODE_AUTH_TOKEN: ${{secrets.DRM_GIT_HUB_TOKEN}}
      - run: npm install --ignore-scripts
      - run: yarn test
      - run: yarn build
      - run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.DRM_GIT_HUB_TOKEN }}
